pipeline {
    agent any
    stages {
        stage('checkout') {
            steps {
                sh "curl https://registry-1.docker.io/v2/ && echo Works"
                git branch: 'main', url: 'https://github.com/s2iwi2s/learn-mngt-sys.git'
            }
        }

        stage('clean') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-login', passwordVariable: 'DOCKER_REGISTRY_PWD', usernameVariable: 'DOCKER_REGISTRY_USER')]) {
                    sh "chmod +x mvnw"
                    sh "./mvnw -version"
                    sh "./mvnw -ntp clean -P-webapp"
                }
            }
        }

        stage ('Stop previous running container'){
            steps{
                sh returnStatus: true, script: 'docker stop $(docker ps -a | grep ${JOB_NAME} | awk \'{print $1}\')'
                sh returnStatus: true, script: 'docker rmi $(docker images | grep ${registry} | awk \'{print $3}\') --force' //this will delete all images
                sh returnStatus: true, script: 'docker rm ${JOB_NAME}'
            }
        }

        stage('docker build') {
            steps {
                script {
                    sh "./mvnw package -Pprod,api-docs,webapp jib:dockerBuild -DskipTests"
                }
            }
        }

        stage('deploy to docker') {
            steps {
                script {
                    sh "docker compose -f ./src/main/docker/app.yml -p ${JOB_NAME} up"
                }
            }
        }
    }
}
